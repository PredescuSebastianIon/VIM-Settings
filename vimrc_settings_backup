" Disable compatibility with vi which can cause unexpected issues.
set nocompatible

" Enable type file detection. Vim will be able to try to detect the type of file in use.
filetype on

" Enable plugins and load plugin for the detected file type.
filetype plugin on

" Load an indent file for the detected file type.
filetype indent on

" Turn syntax highlighting on.
syntax on

" Add numbers to each line on the left-hand side.
set number
" let &nonumber = &number | set nonumber<Bar>echo "Copy now"<Bar>autocmd CursorMoved * ++once set number

" Set shift width to 4 spaces.
set shiftwidth=4
 
" Set tab width to 4 columns.
set tabstop=4

" Do not save backup files.
set nobackup

" Do not let cursor scroll below or above N number of lines when scrolling.
set scrolloff=10

" Do not wrap lines. Allow long lines to extend as far as the line goes.
set nowrap

" While searching though a file incrementally highlight matching characters as you type.
set incsearch

" Ignore capital letters during search.
set ignorecase

" Override the ignorecase option if searching for capital letters.
" This will allow you to search specifically for capital letters.
set smartcase

" Show partial command you type in the last line of the screen.
set showcmd

" Show the mode you are on the last line.
set showmode

" Show matching words during a search.
set showmatch

" Use highlighting when doing a search.
set hlsearch

" Set the commands to save in history default number is 20.
set history=1000

" Enable auto completion menu after pressing TAB.
set wildmenu

" Make wildmenu behave like similar to Bash completion.
set wildmode=list:longest

" There are certain files that we would never want to edit with Vim.
" Wildmenu will ignore files with these extensions.
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx

" allow left/right arrows (and h/l) to cross line boundaries
set whichwrap+=<,>,h,l



" make Vim use the system clipboard by default if available
if has('clipboard')
  set clipboard+=unnamedplus
endif

" ──────────────────────────────────────────────────────────────
" 1) In Visual mode: Ctrl‑C yanks selection into the + register
"    (which, thanks to unnamedplus above, is your system clipboard)
xnoremap <C-c> "+y

" 2) In Normal mode: Ctrl‑C yanks the current line
nnoremap <C-c> "+yy

" (Optional) 3) In Operator‐pending mode, so motions like d<C‑c> still work sensibly
onoremap <C-c> "+y


" PLUGINS ---------------------------------------------------------------- {{{

call plug#begin('~/.vim/plugged')
	
	Plug 'dense-analysis/ale'
	Plug 'preservim/nerdtree'
	Plug 'https://github.com/gnu-octave/vim-octave.git', {'for': 'octave'}
	Plug 'morhetz/gruvbox'

call plug#end()

" }}}

" turn on true‑color if your terminal supports it
if has('termguicolors')
  set termguicolors
endif
" tell the theme you prefer dark background
set background=dark
" finally, activate gruvbox
colorscheme gruvbox

let g:ale_fix_on_save = 1

nnoremap <leader>n :NERDTreeToggle<CR>
